:root {
    --bg: black;
}

button {
    width: 40px;
    height: 40px;
    font-size: 0;
    border-style: none;
    border-radius: 25px;
    color: blue;
    cursor: pointer;
    background-color: transparent;
}

.cell-button:hover {
    background-color: var(--bg);
    opacity: 50%;
    border: 2px solid aqua;
}

#myTable {
    background-color: bisque;
    border: 10px solid darkgrey;
    padding: 0;
    border-collapse: collapse;
}

#myTable td {
    padding: 0;
    background-image: url("grid.svg");
    background-position: center;
}

/* #myTable background color span shrinks if tried to rotate the images with absolute positioning. Using rotated duplicated images as a band-aid solution*/
#myTable tr:first-child td{
    background-image: url("edge.svg");
}
#myTable td:first-child {
    background-image: url("edge-e.svg");
}
#myTable tr:last-child td {
    background-image: url("edge-s.svg");
}
#myTable td:last-child {
    background-image: url("edge-w.svg");
}

#myTable tr:first-child td:first-child{
    background-image: url("corner.svg");
}

#myTable tr:first-child td:last-child{
    background-image: url("corner-3.svg");
    position: absolute;
    rotate: 180deg;
}

#myTable tr:last-child td:last-child{
    background-image: url("corner.svg");
    position: absolute;
    rotate: 180deg;
}

#myTable tr:last-child td:first-child{
    background-image: url("corner-3.svg");
}